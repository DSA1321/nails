&НаКлиенте
Процедура ЗагрузитьПрайсЛист(Команда)
	ЗагрузитьПрайсЛистНаСервер("ПостроительЗапроса");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПрайсЛистНаСервер(СпособЗагрузки)
	ОповещениеОЗавершении = Новый ОписаниеОповещения("СкопироватьФайлНаСерверЗавершение", ЭтотОбъект, СпособЗагрузки);
	НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении,,,,,УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьФайлНаСерверЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	Если ОписаниеПомещенногоФайла <> Неопределено Тогда
		АдресФайлаВХранилище = ОписаниеПомещенногоФайла.Адрес;
		ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, ВидЦеныПродажи, ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, ВидЦеныПродажи, ДополнительныеПараметры)
	ТабДок = ПрочитатьФайл(АдресФайлаВХранилище);
	ТаблицаПрайсЛиста = ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок);
	Если ТаблицаПрайсЛиста.Количество() > 1  Тогда
		ЗагрузитьПрайсЛистПоставщика(ТаблицаПрайсЛиста, ДатаПрайсЛиста, ВидЦеныПродажи);
	Иначе
		СообщениеПользователю = Новый СообщениеПользователю();
		СообщениеПользователю.Текст = "Выбранный файл не содержит строк!";
		СообщениеПользователю.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста                            
Функция ПрочитатьФайл(АдресФайлаВХранилище)
	ТабДок = Новый ТабличныйДокумент;   
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xlsx");  
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);   
	Попытка
		ТабДок.Прочитать(ИмяВременногоФайла);
	Исключение  
		ВызватьИсключение "Не удалось прочитать файл EXCEL в табличный документ!";
	КонецПопытки;    
	Возврат ТабДок;            
КонецФункции

&НаСервереБезКонтекста
Процедура ЗагрузитьПрайсЛистПоставщика(ТаблицаПрайсЛиста, ДатаПрайсЛиста, ВидЦеныПродажи)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаПрайсЛиста", ТаблицаПрайсЛиста);
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ТаблицаПрайсЛиста.Код КАК Код,
	|	ТаблицаПрайсЛиста.Цена КАК Цена
	|ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
	|ИЗ
	|	&ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ВТ_ТаблицаПрайсЛиста.Цена КАК Цена,
	|	ВТ_ТаблицаПрайсЛиста.Код КАК Код
	|ИЗ
	|	ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВТ_ТаблицаПрайсЛиста.Код = Номенклатура.Код";
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	КолСТР = 0;
	Выборка = Рез.Выбрать();	
	Пока Выборка.Следующий() Цикл
		Если (Выборка.Цена <> "") И (Выборка.Код <> "") Тогда
			МенеджерЗаписи = РегистрыСведений.ЦеныНоменклатуры.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период = ДатаПрайсЛиста;
			МенеджерЗаписи.Номенклатура = Выборка.Номенклатура;
			МенеджерЗаписи.ВидЦены = ВидЦеныПродажи;
			МенеджерЗаписи.Цена = Выборка.Цена;
			МенеджерЗаписи.Записать();
			КолСТР = КолСТР + 1;
		Иначе
			СообщениеПользователю = Новый СообщениеПользователю();
			СообщениеПользователю.Текст = СтрШаблон("Для номенклатуры: ""%1"", не указана цена, позиция не будет загружена!", Выборка.Номенклатура);
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	КонецЦикла;
	СообщениеПользователю = Новый СообщениеПользователю();
	СообщениеПользователю.Текст = СтрШаблон("Было успешно загружено и записано в регистр: ""%1"" строк!", КолСТР);
	СообщениеПользователю.Сообщить();
Конецпроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок)
	ОбластиТабличногоДокумента = ТабДок.Область(1, 1, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы);
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластиТабличногоДокумента);
	Построитель.Выполнить();
	ТаблицаПрайсЛиста = Построитель.Результат.Выгрузить();
	Возврат ТаблицаПрайсЛиста;
КонецФункции
